name: Import APIM to Terraform State

on: workflow_dispatch

permissions:
  contents: read
  pages: write
  id-token: write
env:
  TF_STATE_STORAGE_ACCOUNT_NAME: "stgtfstate"
  TF_STATE_CONTAINER_NAME: "contfstate"
  TF_STATE_FILE_NAME: "apim.tfstate"
  APIM_RESOURCE_GROUP: "mss-rg-apim"
  APIM_NAME: "mssapim2"
  APIM_RESOURCE_GROUP_ID: "/subscriptions/${{ secrets.ARM_SUBSCRIPTION_ID }}/resourceGroups/mss-rg-apim"
  APIM_RESOURCE_ID: "/subscriptions/${{ secrets.ARM_SUBSCRIPTION_ID }}/resourceGroups/mss-rg-apim/providers/Microsoft.ApiManagement/service/mssapim2"


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:

      - name: Connect to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get KV value
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "kvsarfraaz"
          secrets: 'tfstate-storage-key'
        id: myGetSecretAction

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1


      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: > 
          terraform init -backend=true -input=false
          -backend-config=storage_account_name="stgtfstate1"
          -backend-config=resource_group_name="rg-tfstate1"
          -backend-config=container_name="contfstate1"
          -backend-config=key=${{ steps.myGetSecretAction.outputs.tfstate-storage-key }}
          -backend-config=use_oidc=true
          -backend-config=tenant_id=${{ secrets.ARM_TENANT_ID }}
          -backend-config=client_id=${{ secrets.ARM_CLIENT_ID }}
          -backend-config=subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }} 
    
      - name: Import APIM RG to Terraform State
        run: |
          terraform import azurerm_resource_group.rg ${APIM_RESOURCE_GROUP_ID}    

      - name: Import APIM to Terraform State
        run: |
          terraform import azurerm_api_management.apim ${APIM_RESOURCE_ID}
